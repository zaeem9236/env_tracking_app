{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDeviceData } from \"../../Redux/Slices/deviceDataSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StatusScreen = function StatusScreen() {\n  var deviceData = useSelector(getDeviceData);\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsxs(View, {\n      style: styles.environmentContainer,\n      children: [_jsxs(View, {\n        style: styles.environmentView,\n        children: [_jsx(Text, {\n          style: styles.environmentView_text,\n          children: \"Temperature\"\n        }), _jsx(Text, {\n          style: styles.environmentView_data,\n          children: deviceData.temperature + \" \\xB0C\"\n        }), _jsx(Text, {\n          style: styles.environmentView_error,\n          children: deviceData.temperature < 30 ? 'Low temperature !' : deviceData.temperature > 40 ? 'High temperature !' : null\n        })]\n      }), _jsxs(View, {\n        style: styles.environmentView,\n        children: [_jsx(Text, {\n          style: styles.environmentView_text,\n          children: \"Humidity\"\n        }), _jsx(Text, {\n          style: styles.environmentView_data,\n          children: deviceData.humidity + \" %\"\n        }), _jsx(Text, {\n          style: styles.environmentView_error,\n          children: deviceData.humidity < 40 ? 'Low humidity !' : deviceData.humidity > 80 ? 'High humidity !' : null\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.vibrationContainer,\n      children: _jsx(View, {\n        children: _jsxs(Text, {\n          style: styles.vibrationText,\n          children: [\"Vibration Status:\", _jsxs(Text, {\n            style: styles.vibrationAlarmText(deviceData.vibration == '1' ? '1' : '0'),\n            children: [\"   \", deviceData.vibration == '0' ? 'no alarm' : 'alarm detected !', \" \"]\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport default StatusScreen;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1\n  },\n  environmentContainer: {\n    flex: 0.4,\n    flexDirection: 'row'\n  },\n  environmentView: {\n    borderBottomWidth: 0.2,\n    borderTopWidth: 0,\n    borderColor: 'rgba(1, 87, 155, 1)',\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  environmentView_text: {\n    fontSize: 20,\n    color: 'rgba(1, 87, 155, 0.8)'\n  },\n  environmentView_data: {\n    fontSize: 50,\n    color: 'rgba(1, 87, 155, 0.8)'\n  },\n  environmentView_error: {\n    fontSize: 15,\n    color: 'red'\n  },\n  vibrationContainer: {\n    flex: 0.2,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingLeft: '5%'\n  },\n  vibrationText: {\n    fontSize: 20,\n    color: 'rgba(1, 87, 155, 0.8)'\n  },\n  vibrationAlarmText: function vibrationAlarmText(status) {\n    return {\n      fontSize: 20,\n      color: status == '0' ? '#4caf50' : '#d32f2f'\n    };\n  }\n});","map":{"version":3,"sources":["D:/Expo Projects/env_tracking_app/src/Screens/StatusScreen/StatusScreen.js"],"names":["React","useSelector","useDispatch","getDeviceData","StatusScreen","deviceData","styles","mainContainer","environmentContainer","environmentView","environmentView_text","environmentView_data","temperature","environmentView_error","humidity","vibrationContainer","vibrationText","vibrationAlarmText","vibration","StyleSheet","create","flex","flexDirection","borderBottomWidth","borderTopWidth","borderColor","justifyContent","alignItems","fontSize","color","paddingLeft","status"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getDeviceData } from '../../Redux/Slices/deviceDataSlice';\r\n\r\nconst StatusScreen = () => {\r\n    let deviceData = useSelector(getDeviceData);\r\n    return (\r\n        <View style={styles.mainContainer}>\r\n            <View style={styles.environmentContainer}>\r\n                <View style={styles.environmentView} >\r\n                    <Text style={styles.environmentView_text}>Temperature</Text>\r\n                    <Text style={styles.environmentView_data}>{`${deviceData.temperature} Â°C`}</Text>\r\n                    <Text style={styles.environmentView_error}>{deviceData.temperature < 30 ? 'Low temperature !' : deviceData.temperature > 40 ? 'High temperature !' : null}</Text>\r\n                </View>\r\n\r\n                <View style={styles.environmentView}>\r\n                    <Text style={styles.environmentView_text}>Humidity</Text>\r\n                    <Text style={styles.environmentView_data}>{`${deviceData.humidity} %`}</Text>\r\n                    <Text style={styles.environmentView_error}>{deviceData.humidity < 40 ? 'Low humidity !' : deviceData.humidity > 80 ? 'High humidity !' : null}</Text>\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.vibrationContainer}>\r\n                <View>\r\n                    <Text style={styles.vibrationText}>Vibration Status:\r\n                        <Text style={styles.vibrationAlarmText((deviceData.vibration == '1') ? '1' : '0')}>   {(deviceData.vibration == '0') ? 'no alarm' : 'alarm detected !'} </Text>\r\n                    </Text>\r\n\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default StatusScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        // backgroundColor: 'red',\r\n        flex: 1\r\n    },\r\n    environmentContainer: {\r\n        // backgroundColor: 'pink',\r\n        flex: 0.4,\r\n        flexDirection: 'row'\r\n    },\r\n    environmentView: {\r\n        // backgroundColor: 'yellow',\r\n        borderBottomWidth: 0.2,\r\n        borderTopWidth: 0,\r\n        borderColor: 'rgba(1, 87, 155, 1)',\r\n        flex: 0.5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    environmentView_text: {\r\n        fontSize: 20,\r\n        color: 'rgba(1, 87, 155, 0.8)'\r\n    },\r\n    environmentView_data: {\r\n        fontSize: 50,\r\n        color: 'rgba(1, 87, 155, 0.8)'\r\n    },\r\n    environmentView_error: {\r\n        fontSize: 15,\r\n        color: 'red'\r\n    },\r\n    vibrationContainer: {\r\n        // backgroundColor: 'green',\r\n        flex: 0.2,\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        paddingLeft: '5%'\r\n    },\r\n    vibrationText: {\r\n        fontSize: 20,\r\n        color: 'rgba(1, 87, 155, 0.8)'\r\n    },\r\n    vibrationAlarmText: function (status) {\r\n        return {\r\n            fontSize: 20,\r\n            color: status == '0' ? '#4caf50' : '#d32f2f'\r\n        }\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}