{"ast":null,"code":"import React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch } from 'react-redux';\nimport { updateUserDetails } from \"../../Redux/Slices/userDetailsSlice\";\nimport { Input, Icon } from 'react-native-elements';\nimport { registerUser } from \"../../Firebase/functions/registerUser\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowHeight = Dimensions.get('window').height;\n\nvar RegisterTemplate = function RegisterTemplate(_ref) {\n  var navigation = _ref.navigation,\n      registerScreen = _ref.registerScreen,\n      setRegisterScreen = _ref.setRegisterScreen,\n      formData = _ref.formData,\n      value = _ref.value,\n      handleChange = _ref.handleChange,\n      fieldToUpdate = _ref.fieldToUpdate,\n      errorMessage = _ref.errorMessage,\n      validateField = _ref.validateField,\n      imgSrc = _ref.imgSrc,\n      headingText1 = _ref.headingText1,\n      headingText2 = _ref.headingText2,\n      inputLabel = _ref.inputLabel,\n      inputPlaceholder = _ref.inputPlaceholder;\n  var dispatch = useDispatch();\n\n  function nextScreen() {\n    validateField(fieldToUpdate);\n\n    if (!errorMessage && value !== '') {\n      if (registerScreen < 4) setRegisterScreen(++registerScreen);else registerUser(formData, navigation, dispatch, updateUserDetails);\n    }\n  }\n\n  function backScreen() {\n    setRegisterScreen(--registerScreen);\n  }\n\n  return _jsxs(View, {\n    style: styles.mainContainer(windowHeight),\n    children: [_jsx(View, {\n      style: styles.navigationContainer,\n      children: _jsxs(View, {\n        style: styles.navigationRow,\n        children: [_jsx(Icon, {\n          name: \"arrow-back\",\n          type: \"material\",\n          color: \"#000\",\n          iconStyle: {\n            display: registerScreen !== 1 ? 'flex' : 'none'\n          },\n          onPress: function onPress() {\n            return backScreen();\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            nextScreen();\n          },\n          children: _jsx(Text, {\n            style: styles.navigationText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        style: styles.image,\n        source: imgSrc\n      })\n    }), _jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(Text, {\n        style: styles.headerText1,\n        children: headingText1\n      }), _jsx(Text, {\n        style: styles.headerText2,\n        children: headingText2\n      })]\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(Input, {\n        label: inputLabel,\n        labelStyle: {\n          paddingBottom: '3%',\n          paddingLeft: '1%'\n        },\n        placeholder: inputPlaceholder,\n        inputContainerStyle: {\n          paddingLeft: '3%',\n          borderColor: 'rgba(0,0,0,0.6)',\n          borderWidth: 1,\n          borderBottomWidth: 1,\n          borderRadius: 10\n        },\n        containerStyle: {\n          width: '90%'\n        },\n        value: value,\n        onChangeText: handleChange(fieldToUpdate),\n        errorMessage: errorMessage\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          nextScreen();\n        },\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Continue\"\n        })\n      })\n    })]\n  });\n};\n\nexport default RegisterTemplate;\nvar styles = StyleSheet.create({\n  mainContainer: function mainContainer(windowHeight) {\n    return {\n      height: windowHeight\n    };\n  },\n  navigationContainer: {\n    flex: 0.1,\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  navigationRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  navigationText: {\n    color: 'rgb(1,87,155)',\n    fontWeight: '800'\n  },\n  imageContainer: {\n    flex: 0.2,\n    paddingLeft: '10%',\n    justifyContent: 'flex-end'\n  },\n  image: {\n    flex: 0.9,\n    width: '30%',\n    resizeMode: 'contain',\n    opacity: 0.8\n  },\n  headerContainer: {\n    flex: 0.08,\n    justifyContent: 'center'\n  },\n  headerText1: {\n    fontSize: 25,\n    fontWeight: '700',\n    color: 'rgba(0,0,0,0.7)',\n    paddingLeft: '5%'\n  },\n  headerText2: {\n    fontSize: 15,\n    fontWeight: '300',\n    color: 'rgba(0,0,0,0.7)',\n    paddingLeft: '6%'\n  },\n  inputContainer: {\n    flex: 0.4,\n    alignItems: 'center',\n    paddingTop: '7%'\n  },\n  buttonContainer: {\n    flex: 0.17,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loginButton: {\n    width: '85%',\n    height: '35%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8,\n    backgroundColor: 'rgba(1,87,155,1)'\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 22\n  }\n});","map":{"version":3,"sources":["D:/Expo Projects/env_tracking_app/src/Screens/RegisterScreen/RegisterTemplate.js"],"names":["React","useEffect","useDispatch","updateUserDetails","Input","Icon","registerUser","windowHeight","Dimensions","get","height","RegisterTemplate","navigation","registerScreen","setRegisterScreen","formData","value","handleChange","fieldToUpdate","errorMessage","validateField","imgSrc","headingText1","headingText2","inputLabel","inputPlaceholder","dispatch","nextScreen","backScreen","styles","mainContainer","navigationContainer","navigationRow","display","navigationText","imageContainer","image","headerContainer","headerText1","headerText2","inputContainer","paddingBottom","paddingLeft","borderColor","borderWidth","borderBottomWidth","borderRadius","width","buttonContainer","loginButton","loginButtonText","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","color","fontWeight","resizeMode","opacity","fontSize","paddingTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native'\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUserDetails } from '../../Redux/Slices/userDetailsSlice';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { registerUser } from '../../Firebase/functions/registerUser';\r\nimport { Dimensions } from 'react-native';\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\n\r\nconst RegisterTemplate = ({ navigation, registerScreen, setRegisterScreen, formData, value, handleChange, fieldToUpdate, errorMessage, validateField, imgSrc, headingText1, headingText2, inputLabel, inputPlaceholder }) => {\r\n    let dispatch = useDispatch()\r\n\r\n\r\n    function nextScreen() {\r\n        validateField(fieldToUpdate);\r\n        if (!errorMessage && value !== '') {\r\n            if (registerScreen < 4)\r\n                setRegisterScreen(++registerScreen)\r\n            else\r\n                registerUser(formData, navigation, dispatch, updateUserDetails);\r\n        }\r\n    }\r\n\r\n    function backScreen() {\r\n        setRegisterScreen(--registerScreen)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.mainContainer(windowHeight)}>\r\n            <View style={styles.navigationContainer}>\r\n                <View style={styles.navigationRow}>\r\n                    <Icon\r\n                        name='arrow-back'\r\n                        type='material'\r\n                        color='#000'\r\n                        iconStyle={{ display: (registerScreen !== 1) ? 'flex' : 'none' }}\r\n                        onPress={() => backScreen()} />\r\n                    <TouchableOpacity onPress={() => { nextScreen() }}><Text style={styles.navigationText}>Continue</Text></TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            <View style={styles.imageContainer}>\r\n                <Image style={styles.image} source={imgSrc} />\r\n            </View>\r\n            <View style={styles.headerContainer}>\r\n                <Text style={styles.headerText1}>{headingText1}</Text>\r\n                <Text style={styles.headerText2}>{headingText2}</Text>\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <Input\r\n\r\n                    label={inputLabel}\r\n                    labelStyle={{ paddingBottom: '3%', paddingLeft: '1%' }}\r\n                    placeholder={inputPlaceholder}\r\n                    inputContainerStyle={{ paddingLeft: '3%', borderColor: 'rgba(0,0,0,0.6)', borderWidth: 1, borderBottomWidth: 1, borderRadius: 10 }}\r\n                    containerStyle={{ width: '90%' }}\r\n                    value={value}\r\n                    onChangeText={handleChange(fieldToUpdate)}\r\n                    errorMessage={errorMessage}\r\n                />\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.loginButton} onPress={() => { nextScreen() }}>\r\n                    <Text style={styles.loginButtonText}>Continue</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterTemplate\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: function (windowHeight) {\r\n        return {\r\n            // backgroundColor: 'yellow',\r\n            // flex: 1\r\n            height: windowHeight\r\n        }\r\n    },\r\n    navigationContainer: {\r\n        flex: 0.1,\r\n        // backgroundColor: 'red',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    navigationRow: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: '90%'\r\n    },\r\n    navigationText: {\r\n        color: 'rgb(1,87,155)',\r\n        fontWeight: '800'\r\n    },\r\n    imageContainer: {\r\n        // backgroundColor: 'purple',\r\n        flex: 0.2,\r\n        paddingLeft: '10%',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    image: {\r\n        // backgroundColor: 'yellow',\r\n        flex: 0.9,\r\n        width: '30%',\r\n        resizeMode: 'contain',\r\n        opacity: 0.8\r\n    },\r\n    headerContainer: {\r\n        // backgroundColor: 'pink',\r\n        flex: 0.08,\r\n        justifyContent: 'center'\r\n    },\r\n    headerText1: {\r\n        fontSize: 25,\r\n        fontWeight: '700',\r\n        color: 'rgba(0,0,0,0.7)',\r\n        paddingLeft: '5%'\r\n    },\r\n    headerText2: {\r\n        fontSize: 15,\r\n        fontWeight: '300',\r\n        color: 'rgba(0,0,0,0.7)',\r\n        paddingLeft: '6%'\r\n    },\r\n    inputContainer: {\r\n        // backgroundColor: 'green',\r\n        flex: 0.4,\r\n        alignItems: 'center',\r\n        paddingTop: '7%'\r\n    },\r\n    buttonContainer: {\r\n        // backgroundColor: 'yellow',\r\n        flex: 0.17,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center'\r\n    },\r\n    loginButton: {\r\n        width: '85%',\r\n        height: '35%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 8,\r\n        backgroundColor: 'rgba(1,87,155,1)',\r\n    },\r\n    loginButtonText: {\r\n        color: 'white',\r\n        fontSize: 22\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}