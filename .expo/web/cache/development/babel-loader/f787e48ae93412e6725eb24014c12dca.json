{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ReactNative from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ENV from \"../config/ENV\";\n\nvar Color = _createClass(function Color() {\n  _classCallCheck(this, Color);\n});\n\n_defineProperty(Color, \"colorsCustom\", void 0);\n\n_defineProperty(Color, \"get\", function (key, isDark) {\n  var _ReactNative$Platform, _ReactNative$Platform2;\n\n  if (Color.colorsCustom) {\n    var _index = isDark && Color.colorsCustom.length === 2 ? 1 : 0;\n\n    return Color.colorsCustom[_index][key];\n  }\n\n  var color = ENV.COLORS[key];\n  var index = !isDark ? 0 : 1;\n  var i_a = Platform.select({\n    ios: (_ReactNative$Platform = ReactNative === null || ReactNative === void 0 ? void 0 : ReactNative.PlatformColor(color.ios)) !== null && _ReactNative$Platform !== void 0 ? _ReactNative$Platform : color.default[index],\n    android: (_ReactNative$Platform2 = ReactNative === null || ReactNative === void 0 ? void 0 : ReactNative.PlatformColor(color.android[index])) !== null && _ReactNative$Platform2 !== void 0 ? _ReactNative$Platform2 : color.default[index]\n  });\n  return i_a !== null && i_a !== void 0 ? i_a : color.default[index];\n});\n\nexport default Color;","map":{"version":3,"sources":["color.ts"],"names":["Color","index","isDark","color","ENV","i_a","ios","ReactNative","android"],"mappings":";;;;;;;;;;;;;;;;;;OAAA,W;;AACA,OAAA,GAAA;;IAYA,K;;;;gBAAMA,K;;gBAAAA,K,SAGsB,UAAA,GAAA,EAAA,MAAA,EAAiB;AAAA,MAAA,qBAAA,EAAA,sBAAA;;AACzC,MAAIA,KAAK,CAAT,YAAA,EAAwB;AACtB,QAAMC,MAAK,GAAGC,MAAM,IAAIF,KAAK,CAALA,YAAAA,CAAAA,MAAAA,KAAVE,CAAAA,GAAAA,CAAAA,GAAd,CAAA;;AACA,WAAOF,KAAK,CAALA,YAAAA,CAAAA,MAAAA,EAAP,GAAOA,CAAP;AACD;;AAED,MAAMG,KAAK,GAAGC,GAAG,CAAHA,MAAAA,CAAd,GAAcA,CAAd;AACA,MAAMH,KAAK,GAAG,CAAA,MAAA,GAAA,CAAA,GAAd,CAAA;AACA,MAAMI,GAAG,GAAG,QAAQ,CAAR,MAAA,CAA0E;AACpFC,IAAAA,GAAG,EAAA,CAAA,qBAAA,GAAEC,WAAF,KAAA,IAAEA,IAAAA,WAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAAA,WAAW,CAAXA,aAAAA,CAA2BJ,KAAK,CAAlC,GAAEI,CAAF,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA2CJ,KAAK,CAALA,OAAAA,CADsC,KACtCA,CADsC;AAEpFK,IAAAA,OAAO,EAAA,CAAA,sBAAA,GAAED,WAAF,KAAA,IAAEA,IAAAA,WAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAAA,WAAW,CAAXA,aAAAA,CAA2BJ,KAAK,CAALA,OAAAA,CAA7B,KAA6BA,CAA3BI,CAAF,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,sBAAA,GAAsDJ,KAAK,CAALA,OAAAA,CAAAA,KAAAA;AAFuB,GAA1E,CAAZ;AAKA,SAAOE,GAAP,KAAA,IAAOA,IAAAA,GAAP,KAAA,KAAA,CAAOA,GAAP,GAAOA,GAAOF,KAAK,CAALA,OAAAA,CAAd,KAAcA,CAAd;;;AAIJ,eAAA,KAAA","sourcesContent":["import ReactNative, { Platform } from 'react-native';\nimport ENV from '../config/ENV';\n\ntype IGet = (key: keyof IColors, isDark: boolean) => string | undefined | typeof ReactNative.OpaqueColorValue;\nexport type IColors = {\n  label: string;\n  card: string;\n  overlay: string;\n  success: string;\n  danger: string;\n  warning: string;\n};\n\nclass Color {\n  public static colorsCustom?: [IColors] | [IColors, IColors];\n\n  public static get: IGet = (key, isDark) => {\n    if (Color.colorsCustom) {\n      const index = isDark && Color.colorsCustom.length === 2 ? 1 : 0;\n      return Color.colorsCustom[index]![key];\n    }\n\n    const color = ENV.COLORS[key];\n    const index = !isDark ? 0 : 1;\n    const i_a = Platform.select<string | undefined | typeof ReactNative.OpaqueColorValue>({\n      ios: ReactNative?.PlatformColor(color.ios) ?? color.default[index],\n      android: ReactNative?.PlatformColor(color.android[index]) ?? color.default[index],\n    });\n\n    return i_a ?? color.default[index];\n  };\n}\n\nexport default Color;\n"]},"metadata":{},"sourceType":"module"}